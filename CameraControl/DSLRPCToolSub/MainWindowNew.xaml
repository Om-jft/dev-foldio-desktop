<Controls:MetroWindow x:Class="DSLR_Tool_PC.MainWindowNew"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    Title="OrangeMonkie" Height="799" Width="987" 
                    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                    TextElement.FontWeight="Regular"
                    TextElement.FontSize="13"
                    TextOptions.TextFormattingMode="Ideal"
                    TextOptions.TextRenderingMode="Auto"
                    Background="{DynamicResource MaterialDesignPaper}"
                    FontFamily="{DynamicResource MaterialDesignFont}" 
                    GlowBrush="{DynamicResource AccentColorBrush}"                       
         
                    xmlns:my="clr-namespace:CameraControl"
                    xmlns:local="clr-namespace:CameraControl.Controls"
                    xmlns:local1="clr-namespace:DSLR_Tool_PC.Controles"   
                    xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
                    xmlns:myClasess="clr-namespace:CameraControl.Classes"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
                    xmlns:Panels="clr-namespace:CameraControl.Panels"
                    xmlns:Devices="clr-namespace:CameraControl.Devices;assembly=CameraControl.Devices"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:viewModel="clr-namespace:CameraControl.ViewModel"
                    xmlns:wpf="clr-namespace:CameraControl.Core.Wpf;assembly=CameraControl.Core"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:zoomAndPan="clr-namespace:CameraControl.Core.Controls.ZoomAndPan;assembly=CameraControl.Core" xmlns:layouts="clr-namespace:CameraControl.Layouts"
                      Name="Window" ShowTitleBar="False"
                    Icon="/CameraControl;component/Images/logo.png" 
                    WindowState="Maximized" VerticalContentAlignment="Center" 
                       
                    Closed="Window_Closed" 
                    Closing="Window_Closing" 
                    PreviewKeyDown="MetroWindow_PreviewKeyDown" 
                    Loaded="MetroWindow_Loaded" 
                    KeyDown="Window_KeyDown" 
                    StateChanged="Window_StateChanged" 
                    MouseWheel="Window_MouseWheel" 
                    SizeChanged="Window_SizeChanged"                        
                    ContentRendered="Window_ContentRendered">
    <!--<i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior/>
    </i:Interaction.Behaviors>-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <ResourceDictionary Source="../Resources/MoreIcons.xaml" />
                <ResourceDictionary Source="../Styles/ExpanderEx.xaml" />
                <ResourceDictionary Source="/DSLRPCToolSub/Theme/Theme.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Snackbar.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
            <wpf:IntToProgressConverter x:Key="MyConverter"/>
            <Style x:Key="ZoomStyle" TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter  x:Name="PART_Content" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.TransferProgress, Converter={StaticResource MyConverter}}" ProgressState="Normal"/>
    </Window.TaskbarItemInfo>

    <!--<Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <CheckBox Content="{T:TranslateExtension LabelStayOnTop2}" Name="btn_stay_on_top" IsChecked="{Binding Path=Topmost, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindowAdvanced, AncestorLevel=1}}" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>-->

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <tb:TaskbarIcon Name="MyNotifyIcon"
                  IconSource="/CameraControl;component/logo.ico"
                  ToolTipText="OrangeMonkie" TrayMouseDoubleClick="MyNotifyIcon_TrayMouseDoubleClick" MenuActivation="LeftOrRightClick">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.DataContext>
                            <viewModel:MainMenuViewModel/>
                        </ContextMenu.DataContext>
                        <MenuItem Header="{T:TranslateExtension LabelRestore}" Command="{Binding SendCommand}" CommandParameter="Restore" InputGestureText="{myClasess:CommandShortcutExtensioncs Restore}"/>
                        <Separator/>
                        <MenuItem Header="{T:TranslateExtension MenuExit}" Command="{Binding SendCommand}" CommandParameter="All_Close" InputGestureText="{myClasess:CommandShortcutExtensioncs All_Close}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>


            <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Grid.RowSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  ShowGridLines="False" Margin="0">
                <!--<DockPanel   Name="StackLayout" Margin="0"/>-->
                <!--<Controls:ProgressRing IsActive="True" Height="184" Width="214" IsLarge="False" />-->
            </Grid>

            <!--<Controls:MetroContentControl Grid.ColumnSpan="4">-->
            <WrapPanel Grid.Row="1"  Grid.ColumnSpan="3">
                <!--<Button ToolTip="{T:TranslateExtension CapturePhotoToolTip}"  Width="40" Height="40" Name="button3" Click="button3_Click" IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                    materialDesign:ButtonProgressAssist.Value="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.TransferProgress}">
                    <materialDesign:PackIcon Kind="CameraIris" Height="35" Width="35" />
                </Button>-->
                <!--<ProgressBar  Style="{StaticResource MaterialDesignCircularProgressBar
}" Value="50" IsIndeterminate="True" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-44,5,5,5" Height="40" Width="40" 
                         Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsBusy}"/>-->

                <!--<Button Content="Lv" ToolTip="{T:TranslateExtension LiveViewToolTip}" Height="40" Name="btn_liveview" Width="40" Margin="4" Command="{Binding Source={x:Static Member=myClasess:WpfCommands.ShowLiveViewCommand}}" CommandParameter="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice}" FontSize="15" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowLiveViewButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}"/>-->
                <Button  ToolTip="{T:TranslateExtension DownloadWindowTitle}" Height="40" Name="but_download" Width="40" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}" IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" Click="but_download_Click"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowDownloadButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="Download" Height="35" Width="35" />
                </Button>

                <Button Content="[BR]" ToolTip="{T:TranslateExtension BraketingToolTip}" Width="40"  Height="40" Name="btn_br" IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" Margin="4" Click="btn_br_Click" FontSize="14" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowBracketingButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                <!--<ToggleButton ToolTip="Image property" Height="50" Width="50" Name="button1"  Click="button1_Click" Margin="5">
                    <Image Margin="5" Source="/CameraControl;component/Images/Properties.png"/>
                </ToggleButton>-->
                <Button ToolTip="{T:TranslateExtension TimeLapseToolTip}" Height="40" Name="but_timelapse" Width="40" Margin="4" Click="but_timelapse_Click" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowTimelapseButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="Timelapse" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension FullscreenToolTip}" Height="40" Name="but_fullscreen" Width="40" Margin="4" Click="but_fullscreen_Click" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowFullScreenButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="Fullscreen" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension BrowseSessionsToolTip}" Height="40" Name="btn_browse" Width="40" Margin="4"  FontSize="15" Click="btn_browse_Click" Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowBrowseButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="FolderImage" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension LabelAstronomy}" Height="40" Name="but_star" Width="40" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}" Click="but_star_Click"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowAstronomyButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="WeatherNight" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension MenuMultipleCamera}" Height="40" Name="but_multiple" Width="40" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}" Click="Button_Click"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowMulyiCameraButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="ImageMultiple" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension LabelWifi}" Height="40" Name="but_wifi" Width="40" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}" Click="but_wifi_Click"
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowWifiCameraButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <materialDesign:PackIcon Kind="SignalVariant" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension LabelPrint}" Height="40" Name="but_print" Width="40" Margin="4" Style="{StaticResource MaterialDesignFloatingActionLightButton}" 
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowPrintButtonMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}"
                        Click="but_print_Click">
                    <materialDesign:PackIcon Kind="Printer" Height="35" Width="35" />
                </Button>
                <Button ToolTip="{T:TranslateExtension LabelWebserver}" Height="40" Name="but_qr" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}"                         
                        Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=UseWebserver, Converter={StaticResource BooleanToVisibilityConverter1}}"
                        Click="but_qr_Click">
                    <materialDesign:PackIcon Kind="Qrcode" Height="35" Width="35" />
                </Button>
                <ItemsControl ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.PluginManager}, Path=ToolBarPlugins}" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Control}" Visibility="{Binding Path=Visible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </WrapPanel>
            <!--</Controls:MetroContentControl>-->

            <!--<StackPanel Grid.Row="2" Grid.RowSpan="4" Grid.Column="0" Orientation="Horizontal" Margin="4">
                <local:Controler x:Name="controler2" DataContext="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}}" IsEnabled="{Binding SelectedCameraDevice.IsConnected, Source={x:Static Core:ServiceProvider.DeviceManager}}" Margin="0" Padding="0" 
                             Visibility="{Binding ShowCameraPropertiesMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}"/>
            </StackPanel>-->

            <Menu Grid.Row="0" Grid.ColumnSpan="4" Grid.Column="0" Visibility="{Binding Branding.ShowMainMenu, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="0" Margin="0" HorizontalAlignment="Left"
              IsMainMenu="True">
                <Menu.DataContext>
                    <viewModel:MainMenuViewModel/>
                </Menu.DataContext>
                <MenuItem Header="{T:TranslateExtension MenuFile}" Padding="5,2" Margin="1">
                    <MenuItem Header="{T:TranslateExtension SettingsToolTip}" Command="{Binding SettingsCommand}" Visibility="{Binding Branding.ShowSettingMenuMainWindow, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension MenuExit}" Command="{Binding SendCommand}" CommandParameter="All_Close" InputGestureText="{myClasess:CommandShortcutExtensioncs All_Close}"/>
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuView}" Padding="5,2" Margin="1" Visibility="{Binding Branding.ShowViewMenu, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem Header="{T:TranslateExtension LabelShowFocusPoints}" IsChecked="{Binding ShowFocusPoints, Mode=OneWay}" Command="{Binding ToggleFocusCommand}" IsCheckable="True"/>
                    <MenuItem Header="{T:TranslateExtension LabelFlip}" IsChecked="{Binding FlipPreview}" IsCheckable="True"/>
                    <MenuItem Header="{T:TranslateExtension LabelEnhancedThumbs}" IsChecked="{Binding EnhancedThumbs}" IsCheckable="True"/>
                    <MenuItem Header="{T:TranslateExtension LabelShowThumbInfo}" IsChecked="{Binding ShowThumbInfo}" IsCheckable="True"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension MenuLayout}">
                        <MenuItem Header="{T:TranslateExtension MenuLayoutLandscape}" Command="{Binding SetLayoutCommand}" CommandParameter="Normal"/>
                        <MenuItem Header="{T:TranslateExtension MenuLayoutPortrait}" Command="{Binding SetLayoutCommand}" CommandParameter="GridRight"/>
                        <MenuItem Header="{T:TranslateExtension MenuLayoutGrid}" Command="{Binding SetLayoutCommand}" CommandParameter="Grid"/>
                    </MenuItem>
                    <MenuItem Header="{T:TranslateExtension MenuThumbnailSize}">
                        <MenuItem Header="80 %" Command="{Binding ThumbSizeCommand}" CommandParameter="80"/>
                        <MenuItem Header="100 %" Command="{Binding ThumbSizeCommand}" CommandParameter="100"/>
                        <MenuItem Header="200 %" Command="{Binding ThumbSizeCommand}" CommandParameter="200"/>
                        <MenuItem Header="300 %" Command="{Binding ThumbSizeCommand}" CommandParameter="300"/>
                        <MenuItem Header="400 %" Command="{Binding ThumbSizeCommand}" CommandParameter="400"/>
                        <MenuItem Header="500 %" Command="{Binding ThumbSizeCommand}" CommandParameter="500"/>
                        <Slider Minimum="50" Maximum="600" Value="{Binding Settings.ThumbHeigh}"/>
                    </MenuItem>
                    <MenuItem Header="{T:TranslateExtension MenuWindows}">
                        <MenuItem Header="{T:TranslateExtension LiveViewToolTip}" Command="{Binding Source={x:Static Member=myClasess:WpfCommands.ShowLiveViewCommand}}" CommandParameter="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice}" InputGestureText="{myClasess:CommandShortcutExtensioncs BarcodeWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension DownloadWindowTitle}" Command="{Binding SendCommand}" CommandParameter="DownloadPhotosWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs DownloadPhotosWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension TimeLapseToolTip}" Command="{Binding SendCommand}" CommandParameter="TimeLapseWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs TimeLapseWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension LabelAstronomy}" Command="{Binding SendCommand}" CommandParameter="BulbWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs BulbWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension MenuMultipleCamera}" Command="{Binding SendCommand}" CommandParameter="MultipleCameraWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs MultipleCameraWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension LabelPrint}" Command="{Binding SendCommand}" CommandParameter="PrintWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs PrintWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension LabelBarcode}" Command="{Binding SendCommand}" CommandParameter="BarcodeWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs BarcodeWnd_Show}"/>
                        <MenuItem Header="{T:TranslateExtension SelectTagsToolTip}" Command="{Binding SendCommand}" CommandParameter="TagSelectorWnd_Show" InputGestureText="{myClasess:CommandShortcutExtensioncs TagSelectorWnd_Show}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension LabelEmailPublicWebAddress}" IsEnabled="{Binding Settings.PublicWebserver}"
                              Click="MenuItem_Click"/>
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuSession}" Visibility="{Binding Branding.ShowSessionPanel, Converter={StaticResource BooleanToVisibilityConverter}}"  Padding="5,2" Margin="1">
                    <MenuItem Header="{T:TranslateExtension MenuSessionAdd}" Command="{Binding NewSessionCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuSessionEdit}" Command="{Binding EditSessionCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuSessionDel}" Command="{Binding DelSessionCommand}"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension LabelRefreshSession}" Command="{Binding RefreshSessionCommand}"/>
                    <MenuItem Header="{T:TranslateExtension LabelSessionOpenFolder}" Command="{Binding ShowSessionCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuIncrementSeries}" Command="{Binding SendCommand}" CommandParameter="NextSeries" InputGestureText="{myClasess:CommandShortcutExtensioncs NextSeries}"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension LabelSelection}">
                        <MenuItem Header="{T:TranslateExtension LabelSelectNone}" Command="{Binding Path=SelectNoneCommand}"/>
                        <MenuItem Header="{T:TranslateExtension LabelSelectAll}" Command="{Binding SendCommand}" CommandParameter="SelectAll_Image" InputGestureText="{myClasess:CommandShortcutExtensioncs SelectAll_Image}"/>
                        <MenuItem Header="{T:TranslateExtension LabelSelectUnLiked}" Command="{Binding Path=SelectUnLiked}"/>
                        <MenuItem Header="{T:TranslateExtension LabelSelectLiked}" Command="{Binding Path=SelectLiked}"/>
                        <MenuItem Header="{T:TranslateExtension LabelSelectSeries}" Command="{Binding Path=SelectSeries}"/>
                        <MenuItem Header="{T:TranslateExtension MenuInver}" Command="{Binding Path=SelectInvertCommand}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension MenuImportSession}" Command="{Binding Path=ImportSessionCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuExportSession}" Command="{Binding Path=ExportSessionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Copy full path in clipboard" Command="{Binding Path=CopyNameClipboardCommand}" />
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuCamera}" Padding="5,2" Margin="1" Visibility="{Binding Branding.ShowCameraMenu, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem Header="{T:TranslateExtension MenuCameraProperty}" Command="{Binding Path=CameraPropertyCommand}" IsEnabled="{Binding CameraConnected}"/>
                    <MenuItem Header="{T:TranslateExtension LabelUseAsMaster}" Command="{Binding Path=UseAsMasterCommand}" IsEnabled="{Binding CameraConnected}"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension LabelRefreshCameraList}" Command="{Binding Path=RefreshCommand}"/>
                    <!--<MenuItem Header="{T:TranslateExtension MenuResetDevice}" Command="{Binding SendCommand}" CommandParameter="ResetDevice" InputGestureText="{myClasess:CommandShortcutExtensioncs ResetDevice}"/>-->
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuPlugins}" Padding="5,2" Margin="1" Visibility="{Binding Branding.ShowPluginMenu, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <MenuItem Header="{T:TranslateExtension LabelExport}" ItemsSource="{Binding ExportPlugins}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding Title}" Command="{Binding Path=DataContext.ExecuteExportPluginCommand, 
                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Menu}} }" CommandParameter="{Binding}" />
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                    <MenuItem Header="{T:TranslateExtension LabelTools}" ItemsSource="{Binding ToolsPlugins}">
                        <MenuItem.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding Title}" Command="{Binding Path=DataContext.ExecuteToolPluginCommand, 
                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Menu}} }" CommandParameter="{Binding}" />
                            </DataTemplate>
                        </MenuItem.ItemTemplate>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuHelp}" Visibility="{Binding Branding.OnlineReference, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="5,2" Margin="1">
                    <MenuItem Header="{T:TranslateExtension MenuOnlineManual}" Command="{Binding ManualPageCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuHomePage}" Command="{Binding HomePageCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuForum}" Command="{Binding ForumCommand}"/>
                    <Separator/>
                    <MenuItem Header="{T:TranslateExtension LabelSendTheLogFile}" Command="{Binding SendLogFileCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuCheckForUpdate}" Command="{Binding CheckUpdateCommand}"/>
                    <MenuItem Header="{T:TranslateExtension LabelChangelog}" Command="{Binding ShowChangeLogCommand}"/>
                    <MenuItem Header="{T:TranslateExtension MenuAbout}" Command="{Binding AboutCommand}"/>
                </MenuItem>
                <MenuItem Header="{T:TranslateExtension MenuHomePage}" Command="{Binding HomePageCommand}" Visibility="{Binding HomePageMenuVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Padding="5,2" Margin="1"/>
            </Menu>



            <ToggleButton Grid.Row="0" Grid.Column="3" HorizontalAlignment="Right" Name="PanelButton" VerticalAlignment="Center" Grid.RowSpan="3" IsChecked="True"
                      Margin="0" Width="24" Height="24" Style="{StaticResource MaterialDesignFlatToggleButton}" Cursor="Hand" >
                <materialDesign:PackIcon Width="21" Height="21" Kind="DotsVertical" />
            </ToggleButton>


            <!--Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowRightPanelMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}}"-->
            <!--<ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">-->
            <Grid Width="300" Grid.Column="3" Grid.Row="1" Grid.RowSpan="6"  Margin="0,0,15,3" 
                  Visibility="{Binding ElementName=PanelButton, Path=IsChecked , Converter={StaticResource BooleanToVisibilityConverter1}}" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <materialDesign:Card   VerticalAlignment="Top" DataContext="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}}" Margin="4" 
                           Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowHistogram, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <Grid Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="90" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Polygon Points="{Binding Path=SelectedBitmap.LuminanceHistogramPoints}" Stretch="Fill" Fill="LightGray" Opacity="0.5"/>
                        <Polygon Points="{Binding Path=SelectedBitmap.RedColorHistogramPoints}" Stretch="Fill" Stroke="Red" Opacity="0.5" />
                        <Polygon Points="{Binding Path=SelectedBitmap.GreenColorHistogramPoints}" Stretch="Fill" Stroke="LightGreen"  Opacity="0.5"/>
                        <Polygon Points="{Binding Path=SelectedBitmap.BlueColorHistogramPoints}" Stretch="Fill" Stroke="Blue" Opacity="0.5"/>
                        <Controls:ProgressRing IsActive="{Binding Path=ImageLoading}" VerticalAlignment="Center" HorizontalAlignment="Center"  Height="50" Width="50" />
                        <CheckBox Grid.Column="0" Height="20" HorizontalAlignment="Left" Margin="1" IsChecked="{Binding Path=HighlightUnderExp}" VerticalAlignment="Top" />
                        <CheckBox Height="20" Width="20" Margin="1"  IsChecked="{Binding Path=HighlightOverExp}" VerticalAlignment="Top" HorizontalAlignment="Right" HorizontalContentAlignment="Right"/>
                        <Label Grid.Row="1" Content="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.InfoLabel}" HorizontalContentAlignment="Center" Margin="0" Padding="0" HorizontalAlignment="Center" />
                    </Grid>
                </materialDesign:Card>
                <Grid Grid.Row="1" Margin="0" Visibility="Collapsed"  >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" PanningMode="Both" PanningRatio="2">
                        <StackPanel>
                            <materialDesign:Card Margin="4">
                                <Expander Header="Preview" IsExpanded="True">
                                    <Image Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.Preview}" Height="185" MouseDown="Image_MouseDown" Name="PrviewImage" MouseMove="PrviewImage_MouseMove"  Margin="4">
                                        <Image.LayoutTransform>
                                            <RotateTransform  Angle="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.RotationAngle}" />
                                        </Image.LayoutTransform>
                                    </Image>
                                </Expander>
                            </materialDesign:Card>
                            <!--<Border
                                Height="1"
                                HorizontalAlignment="Stretch"
                                Background="{DynamicResource MaterialDesignDivider}"
                                SnapsToDevicePixels="True" />-->
                            <materialDesign:Card Margin="4">
                                <Expander  VerticalAlignment="Top" IsExpanded="True" 
                                       Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowSessionPanel, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                    <Expander.Header>
                                        <Grid>
                                            <TextBlock Text="{T:TranslateExtension Session}" VerticalAlignment="Center" FontSize="15"/>
                                            <Button Margin="0" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" HorizontalContentAlignment="Right" Padding="0" 
                                                    Click="Button_Click_3">
                                                <materialDesign:PackIcon Width="20" Height="20" Kind="Settings" />
                                            </Button>
                                        </Grid>
                                    </Expander.Header>
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <Grid Margin="24,8,24,16" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ComboBox Name="cmb_session" SelectedValue="{Binding Path=DefaultSession}" ItemsSource="{Binding Path=PhotoSessions}" ToolTip="{Binding Path=DefaultSession.Folder}"   Grid.ColumnSpan="2" 
                                                  Margin="4">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Label Content="{Binding Path=Name}" FontWeight="Bold" FontSize="15" Padding="1"/>
                                                                <Label Content="(" Padding="1"/>
                                                                <Label Content="{Binding Path=Files.Count}" Padding="1" VerticalAlignment="Center"/>
                                                                <Label Content=")" Padding="1"/>
                                                            </StackPanel>
                                                            <Label Content="{Binding Path=Folder}" Padding="1"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <TextBox Grid.Row="2" Grid.Column="0"  Text="{Binding Path=DefaultSession.CaptureName, UpdateSourceTrigger=PropertyChanged}" Margin="4" Name="txt_CaptureName"
                                                 materialDesign:HintAssist.Hint="{T:TranslateExtension LabelCaptureName}"
                                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>

                                            <TextBox Grid.Row="3" Text="{Binding Path=DefaultSession.Series}" Margin="4" VerticalAlignment="Top"
                                                 materialDesign:HintAssist.Hint="{T:TranslateExtension LabelSeries}"
                                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                                        </Grid>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                            <materialDesign:Card Margin="4" Visibility="{Binding  Path=DefaultSession.AlowFolderChange, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                <Expander Header="{T:TranslateExtension LabelFolderSelector}" VerticalAlignment="Top" IsExpanded="False"  MaxHeight="200">
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <Panels:DirectorySelectorControl SelectedPath="{Binding Path=DefaultSession.Folder, Mode=TwoWay}" Margin="24,8,24,16"/>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                            <materialDesign:Card Margin="4">
                                <Expander  Header="{T:TranslateExtension LabelAutoExportPlugins}" VerticalAlignment="Top" IsExpanded="True" Margin="0" Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowAutoExportPanel, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <StackPanel Orientation="Vertical" Margin="24,8,24,16">
                                            <ListBox Margin="4" ItemsSource="{Binding DefaultSession.AutoExportPluginConfigs}" MaxHeight="200"  dragDrop:DragDrop.IsDragSource="True" dragDrop:DragDrop.IsDropTarget="True" HorizontalContentAlignment="Stretch">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid IsEnabled="{Binding IsRedy}" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="30"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox Content="{Binding DisplayName}" IsChecked="{Binding IsEnabled}"/>
                                                            <materialDesign:PopupBox Grid.Column="1" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False" HorizontalAlignment="Right" VerticalAlignment="Top"  PopupMode="Click">
                                                                <StackPanel>
                                                                    <Button Content="Delete" Command="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=DefaultSession.RemovePluginCommand}" CommandParameter="{Binding}"/>
                                                                    <Button Content="Settings" Command="{Binding ConfigurePluginCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type my:MainWindowAdvanced}}}" CommandParameter="{Binding}"/>
                                                                    <Button Content="Execute"  Command="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=DefaultSession.ApplyPluginCommand}" CommandParameter="{Binding}"/>
                                                                </StackPanel>
                                                            </materialDesign:PopupBox>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                            <Controls:DropDownButton Name="DownButton" Padding="0" Margin="4" VerticalContentAlignment="Center" Content="{T:TranslateExtension LabelAddPlugin}" DisplayMemberPath="Name" 
                                                             ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.PluginManager}, Path=AutoExportPlugins}">
                                                <Controls:DropDownButton.ItemContainerStyle>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="Command" Value="{Binding AddPluginCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type my:MainWindowAdvanced}}}"/>
                                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                                    </Style>
                                                </Controls:DropDownButton.ItemContainerStyle>
                                                <Controls:DropDownButton.Icon>
                                                    <Rectangle Width="20" Height="20">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Controls:DropDownButton.Icon>
                                            </Controls:DropDownButton>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                            <materialDesign:Card Margin="4">
                                <Expander  Header="{T:TranslateExtension MenuPresets}" VerticalAlignment="Top" IsExpanded="False" Margin="0" Padding="0" IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" 
                                       Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowPresetPanel, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <StackPanel Margin="24,8,24,16">
                                            <ListBox MaxHeight="100" ItemsSource="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=CameraPresets}" Name="PresetListBox" Margin="3">

                                            </ListBox>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <Button  ToolTip="{T:TranslateExtension SavePresetWindowTitle}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Click="Button_Click_1">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_save}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <Button  ToolTip="{T:TranslateExtension MenuPresetsLoad}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding Path=SelectPresetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindowAdvanced, AncestorLevel=1}}" 
                                        CommandParameter="{Binding ElementName=PresetListBox, Path=SelectedItem}">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_upload}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <Button  ToolTip="{T:TranslateExtension ButtonDeletePreset}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding Path=DeletePresetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindowAdvanced, AncestorLevel=1}}" 
                                        CommandParameter="{Binding ElementName=PresetListBox, Path=SelectedItem}">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_delete}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <Button  ToolTip="{T:TranslateExtension SavePresetWindowTitle}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" 
                                                         Click="Button_Click_2">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <Button  ToolTip="{T:TranslateExtension LabelLoadPresetAllCamera}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}"  Command="{Binding Path=LoadInAllPresetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindowAdvanced, AncestorLevel=1}}" 
                                        CommandParameter="{Binding ElementName=PresetListBox, Path=SelectedItem}">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_elevator_up}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                                <Button  ToolTip="{T:TranslateExtension LabelVerifyPreset}" Height="35" Width="35" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}"  Command="{Binding Path=VerifyPresetCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindowAdvanced, AncestorLevel=1}}" 
                                        CommandParameter="{Binding ElementName=PresetListBox, Path=SelectedItem}">
                                                    <Rectangle Width="15" Height="15">
                                                        <Rectangle.Fill>
                                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_checkmark_pencil}" />
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Button>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                            <materialDesign:Card Margin="4">
                                <Expander  Header="{T:TranslateExtension LabelImageProperties}" VerticalAlignment="Top" IsExpanded="False"  Margin="0" Padding="0"
                                Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowImagePropertiesPanel, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <Panels:ImagePropertiesControl DataContext="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}}" Height="250" Margin="24,8,24,16"/>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                            <materialDesign:Card Margin="4">
                                <Expander  Header="{T:Translate LabelMetadata}" VerticalAlignment="Top" IsExpanded="False"  Margin="0" Padding="0"
                                       Visibility="{Binding Source={x:Static Member=Core:ServiceProvider.Branding}, Path=ShowMetadataPanel, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                                        <Panels:MetadataControl DataContext="{Binding Source={x:Static Core:ServiceProvider.Settings}}" Height="250" HorizontalContentAlignment="Stretch" Margin="24,8,24,16"/>
                                    </StackPanel>
                                </Expander>
                            </materialDesign:Card>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>
            <!--</ScrollViewer>-->

            <materialDesign:Snackbar
            Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" 
            IsActive="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=IsActive}">
                <materialDesign:SnackbarMessage Content="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=SystemMessage}" />
            </materialDesign:Snackbar>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <!--<ColumnDefinition Width="{Binding ActualWidth, ElementName=controler2}"/>-->
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Background="#222222" Grid.Column="1">
                <TabControl >
                    <TabControl.Resources>
                        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="#2e2f30" BorderBrush="#7f8486" BorderThickness="0,0,0,1" />
                                <Border Grid.Column="0" CornerRadius="0" Margin="0" Background="#2e2f30" BorderBrush="#7f8486" BorderThickness="0,0,0,1" />
                                <Path x:Name="Arrow" Grid.Column="1" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                            </Grid>
                        </ControlTemplate>
                        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                        </ControlTemplate>
                        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                            <Setter Property="MinWidth" Value="120"/>
                            <Setter Property="MinHeight" Value="20"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="500" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid>
                                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Foreground="White" FontSize="11px" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                                    <Border x:Name="DropDownBorder" Background="#FF3F3F3F" BorderThickness="1" BorderBrush="#888888"/>
                                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                                    </ScrollViewer>
                                                </Grid>
                                            </Popup>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="#888888"/>
                                            </Trigger>
                                            <Trigger Property="IsGrouping" Value="true">
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                            </Trigger>
                                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                            </Trigger>
                                            <Trigger Property="IsEditable"  Value="true">
                                                <Setter Property="IsTabStop" Value="false"/>
                                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="FontWeight" Value="500" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="#888888"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type TabPanel}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="TabItem">
                            <Setter Property="TextElement.Foreground" Value="#7f8486"/>
                            <Setter Property="Control.FontFamily" Value="Roboto" />
                            <Setter Property="Control.FontSize" Value="17" />
                            <Setter Property="Control.FontWeight" Value="900" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border x:Name="Border" BorderThickness="0,0,0,1" BorderBrush="#7f8486" Margin="0,0">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#007aff" />
                                                <Setter Property="TextElement.Foreground" Value="#007aff"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#7f8486" />
                                                <Setter Property="TextElement.Foreground" Value="#7f8486"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>

                    <TabItem x:Name="CaptureTab"  FontFamily="roboto" Height="50px" Width="150px" Header="Capture" >
                        <Grid Background="#2e2f30" Margin="-3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="260"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="260" />
                            </Grid.ColumnDefinitions>

                            <UniformGrid Columns="3">
                                <FrameworkElement x:Name="c1"/>
                                <!-- no need to add the other three -->
                            </UniformGrid>
                            <TabControl Grid.Column="0" Background="#2e2f30" BorderThickness="0" SelectionChanged="TabControl_SelectionChanged" Width="260">
                                <TabItem x:Name="tab_360" FontFamily="roboto" Header="360" Height="40" FontSize="13" Width="{Binding ElementName=c1, Path=ActualWidth}">
                                    <StackPanel>
                                        <TextBlock Text="Camera Parameter" Margin="8" Style="{StaticResource Sub_Heading_Title}"></TextBlock>
                                        <local:Controler x:Name="controler1" DataContext="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}}" IsEnabled="{Binding SelectedCameraDevice.IsConnected, Source={x:Static Core:ServiceProvider.DeviceManager}}" Margin="0" Padding="0" 
                                                         Visibility="{Binding ShowCameraPropertiesMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}" 
                                                         Width="260" />
                                    </StackPanel>
                                </TabItem>
                                <TabItem x:Name="tab_Single" FontFamily="roboto" Header="Single" Height="40" FontSize="13" Width="{Binding ElementName=c1, Path=ActualWidth}">
                                    <StackPanel>
                                        <TextBlock Text="Camera Parameter" Margin="8" Style="{StaticResource Sub_Heading_Title}"></TextBlock>
                                        <local:Controler x:Name="controler2" DataContext="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}}" IsEnabled="{Binding SelectedCameraDevice.IsConnected, Source={x:Static Core:ServiceProvider.DeviceManager}}" Margin="0" Padding="0" 
                                                         Visibility="{Binding ShowCameraPropertiesMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}" 
                                                         Width="260" />
                                    </StackPanel>
                                </TabItem>
                                <TabItem x:Name="tab_video" FontFamily="roboto" Header="Video" Height="40" FontSize="13" Width="{Binding ElementName=c1, Path=ActualWidth}">
                                    <StackPanel>
                                        <TextBlock Text="Camera Parameter" Margin="8" Style="{StaticResource Sub_Heading_Title}"></TextBlock>
                                        <local1:LVControlerSimple x:Name="LVCSimple1" DataContext="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}}"  IsEnabled="{Binding SelectedCameraDevice.IsConnected, Source={x:Static Core:ServiceProvider.DeviceManager}}" 
                                                                  Visibility="{Binding ShowCameraPropertiesMainWindow, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}" 
                                                                  Width="260" />
                                    </StackPanel>
                                </TabItem>
                            </TabControl>

                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="155*"/>
                                    <ColumnDefinition Width="76*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" MinHeight="50"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto" MinHeight="150" />
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0" Background="#131415" Grid.ColumnSpan="2" Grid.RowSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="15,15,15,10" VerticalAlignment="Center" >
                                        <ToggleButton Height="24" Width="63" BorderThickness="0" BorderBrush="#7f8486" Style="{StaticResource Zoom_Combobox}" IsChecked="False" Click="ToggleButton_Click"  >
                                            <ToggleButton.Background>
                                                <ImageBrush ImageSource="Assets/Images/none/Group 38.png"/>

                                            </ToggleButton.Background>
                                        </ToggleButton>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="15,15,15,10" VerticalAlignment="Center" >
                                        <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
                                            <ToggleButton x:Name="Tg_Btn5" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,10,0" Height="20" Width="20" BorderThickness="0" Style="{StaticResource tb_style}">
                                                <ToggleButton.Background>
                                                    <ImageBrush ImageSource="Assets/Images/none/search.png"/>
                                                </ToggleButton.Background>
                                            </ToggleButton>
                                            <ToggleButton x:Name="Tg_Btn6" Margin="0,0,10,0" Width="27" BorderThickness="0" Style="{StaticResource Vertical_Style}" IsChecked="False">
                                                <ToggleButton.Background>
                                                    <ImageBrush ImageSource="Assets/Images/none/combineda.png"/>
                                                </ToggleButton.Background>
                                            </ToggleButton>
                                            <ToggleButton x:Name="Tg_Btn7" Height="20" Width="27" BorderThickness="0" Style="{StaticResource Horiz_Style}" IsChecked="False">
                                                <ToggleButton.Background>
                                                    <ImageBrush ImageSource="Assets/Images/none/combinedb.png"/>
                                                </ToggleButton.Background>
                                            </ToggleButton>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
                                            <RadioButton x:Name="CGrid0" Background="Transparent" GroupName="CGGroup" Style="{StaticResource ToolboxRadioSelector1}" IsChecked="True" />
                                            <RadioButton x:Name="CGrid1" Background="Transparent" GroupName="CGGroup" Style="{StaticResource ToolboxRadioSelector2}" IsChecked="False"/>
                                            <RadioButton x:Name="CGrid2" Background="Transparent" GroupName="CGGroup" Style="{StaticResource ToolboxRadioSelector3}" IsChecked="False"/>
                                            <RadioButton x:Name="CGrid3" Background="Transparent" GroupName="CGGroup" Style="{StaticResource ToolboxRadioSelector4}" IsChecked="False"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                                            <RadioButton x:Name="ratio1" Checked="ratio1_Checked" Unchecked="ratio1_Unchecked" Background="Transparent" GroupName="CRGroup" Style="{StaticResource ToolboxRadioSelector5}"/>
                                            <RadioButton x:Name="ratio2" Checked="ratio2_Checked" Unchecked="ratio2_Unchecked" Background="Transparent" GroupName="CRGroup" Style="{StaticResource ToolboxRadioSelector6}"/>
                                            <RadioButton x:Name="ratio3" Checked="ratio3_Checked" Unchecked="ratio3_Unchecked" Background="Transparent" GroupName="CRGroup" Style="{StaticResource ToolboxRadioSelector7}" />
                                        </StackPanel>
                                    </StackPanel>
                                    <Border x:Name="slidezoom" Grid.Row="1" Grid.Column="1" Background="#2e2f30" HorizontalAlignment="Left" Padding="10,4,10,4" Margin="0 5 0 0" 
                                            Visibility="{Binding IsChecked, ElementName=Tg_Btn5, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                        <Slider x:Name="sldZoom" Style="{StaticResource Horizontal_Slider}" IsSnapToTickEnabled="True" Width="100" Background="DarkGray" 
                                                Maximum="500" Minimum="100" ValueChanged="Slider_ValueChanged"  />
                                    </Border>
                                </Grid>

                                <Grid  Grid.Row="1" Background="#131415" Grid.ColumnSpan="2" Margin="0,0.2,-0.4,99.8" Grid.RowSpan="2">
                                    <Grid x:Name="CameraGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50"/>
                                            <RowDefinition Height="5*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="30*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid x:Name="grid_360SingleMode" Background="White"  Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="70,50,70,50" >
                                            <DockPanel Name="StackLayout" Margin="0"/>

                                            <Grid Visibility="{Binding IsChecked, ElementName=CGrid1, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid x:Name="G1HLine1" Grid.Row="1" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G1HLine2" Grid.Row="3" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G1VLine1" Grid.RowSpan="5" Grid.Column="1" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G1VLine2" Grid.RowSpan="5" Grid.Column="3" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                            </Grid>
                                            <Grid Visibility="{Binding IsChecked, ElementName=CGrid2, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid x:Name="G2HLine1" Grid.Row="1" Grid.ColumnSpan="20" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G2HLine2" Grid.Row="3" Grid.ColumnSpan="20" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G2HLine3" Grid.Row="5" Grid.ColumnSpan="20" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G2VLine1" Grid.RowSpan="20" Grid.Column="1" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G2VLine2" Grid.RowSpan="20" Grid.Column="3" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G2VLine3" Grid.RowSpan="20" Grid.Column="5" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G2VLine4" Grid.RowSpan="20" Grid.Column="7" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G2VLine5" Grid.RowSpan="20" Grid.Column="9" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                            </Grid>
                                            <Grid x:Name="grd3" Visibility="{Binding IsChecked, ElementName=CGrid3, Converter={StaticResource BooleanToVisibilityConverter1}}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <Grid x:Name="G3HLine1" Grid.Row="1" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G3HLine2" Grid.Row="3" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" Background="Black" Height="2"/>
                                                <Grid x:Name="G3VLine1" Grid.RowSpan="5" Grid.Column="1" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Grid x:Name="G3VLine2" Grid.RowSpan="5" Grid.Column="3" VerticalAlignment="Stretch" Background="Black" Width="2"/>
                                                <Line x:Name="G3_XLine1" Grid.RowSpan="20" Grid.ColumnSpan="20" Stroke="Black" Fill="Black" StrokeThickness="2" X1="0" Y1="0" X2="{Binding ActualWidth, ElementName=grd3}" Y2="{Binding ActualHeight, ElementName=grd3}"/>
                                                <Line x:Name="G3_XLine2" Grid.RowSpan="20" Grid.ColumnSpan="20" Stroke="Black" Fill="Black" StrokeThickness="2" X2="0" Y1="0" X1="{Binding ActualWidth, ElementName=grd3}" Y2="{Binding ActualHeight, ElementName=grd3}"/>
                                            </Grid>
                                            <Grid x:Name="V_Line1" Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Background="Black" Width="2" 
                                                  Visibility="{Binding IsChecked, ElementName=Tg_Btn6, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                            <Grid x:Name="H_Line1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="Black" Height="2" 
                                                  Visibility="{Binding IsChecked, ElementName=Tg_Btn7, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                        </Grid>

                                        <Grid x:Name="grid_VedioMode" Background="Transparent" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" Margin="70,50,70,50" >
                                            <local1:LVControler x:Name="myLVControler" Background="Transparent" ></local1:LVControler>
                                        </Grid>
                                    </Grid>
                                </Grid>

                                <Grid Grid.Row="2" Background="#131415" Grid.ColumnSpan="2">
                                    <StackPanel Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Button ToolTip="{T:TranslateExtension CapturePhotoToolTip}"  Width="80" Height="80" Name="button3" Margin="4" BorderThickness="0" BorderBrush="Transparent" 
                                            IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" materialDesign:ButtonProgressAssist.IsIndicatorVisible="True" materialDesign:ButtonProgressAssist.Value="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.TransferProgress}" 
                                            Click="button3_Click">
                                            <Button.Background>
                                                <ImageBrush Stretch="None" ImageSource="/DSLRPCToolSub/Assets/Images/none/Group 13 Copy 2.png"/>
                                            </Button.Background>
                                        </Button>
                                        <!--<Button Content="Lv" ToolTip="{T:TranslateExtension LiveViewToolTip}" Height="40" Name="btn_liveview" Width="40" Margin="4" Command="{Binding Source={x:Static Member=myClasess:WpfCommands.ShowLiveViewCommand}}" 
                                                CommandParameter="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice}" FontSize="15" Style="{StaticResource MaterialDesignFloatingActionLightButton}" />-->
                                        <Button Visibility="Collapsed" ToolTip="{T:TranslateExtension LiveViewToolTip}" Width="80" Height="80" Name="btn_liveview" Margin="4"  BorderThickness="0" BorderBrush="Transparent" 
                                                IsEnabled="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.IsConnected}" materialDesign:ButtonProgressAssist.IsIndicatorVisible="True" materialDesign:ButtonProgressAssist.Value="{Binding Source={x:Static Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice.TransferProgress}" 
                                                Click="btn_liveview_Click">
                                            <Button.Background>
                                                <ImageBrush Stretch="None" ImageSource="/DSLRPCToolSub/Assets/Images/none/Group 13 Copy.png"/>
                                            </Button.Background>
                                        </Button>
                                        <!--Command="{Binding Source={x:Static  Member=myClasess:WpfCommands.ShowLiveViewCommand}}" 
                                                CommandParameter="{Binding Source={x:Static Member=Core:ServiceProvider.DeviceManager}, Path=SelectedCameraDevice}"-->
                                    </StackPanel>
                                </Grid>
                            </Grid>

                            <Border Grid.Column="2" Background="#2e2f30"  BorderThickness="1" BorderBrush="#535657">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ScrollViewer.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollViewer.RenderTransform>
                                    <StackPanel>
                                        <local1:LevelGraph x:Name="CaptureLevelGraph"/>

                                        <local1:TurnTableControl x:Name="CTT"/>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </TabItem>

                    <TabItem Name="EditTab" FontFamily="roboto" Header="Edit" Width="150px">
                        <Grid Background="#2e2f30" Margin="-3,-3,-3,-3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="260"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="260" />
                            </Grid.ColumnDefinitions>

                            <local1:EditLeftControl Grid.Row="0" Grid.Column="0" />

                            <Grid Grid.Column="1" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="165"/>
                                </Grid.RowDefinitions>

                                <Grid  Grid.Row="0" Background="#131415">
                                    <StackPanel VerticalAlignment="Center">
                                        <Grid  x:Name="E_slidezoom" Height="50" >
                                            <StackPanel Orientation="Horizontal" Margin="6"  VerticalAlignment="Top" HorizontalAlignment="Center" >
                                                <StackPanel Orientation="Horizontal" Margin="0,15,20,0" >
                                                    <ToggleButton x:Name="ETg_Btn6" Checked="Tg_Btn6_Checked" Unchecked="Tg_Btn6_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,10,0" Height="20" Width="27" BorderThickness="0" Style="{StaticResource Vertical_Style}"   >
                                                        <ToggleButton.Background>
                                                            <ImageBrush ImageSource="Assets/Images/none/combineda.png"/>
                                                        </ToggleButton.Background>
                                                    </ToggleButton>
                                                    <ToggleButton x:Name="ETg_Btn7" Checked="Tg_Btn7_Checked" Unchecked="Tg_Btn7_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,4,0" Height="20" Width="27" BorderThickness="0" Style="{StaticResource Horiz_Style}" >
                                                        <ToggleButton.Background>
                                                            <ImageBrush ImageSource="Assets/Images/none/combinedb.png"/>
                                                        </ToggleButton.Background>
                                                    </ToggleButton>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,15,20,0">

                                                    <RadioButton x:Name="Egrid1"  Margin="0,0,0,0" Background="Transparent"  GroupName="GroupTool1" Style="{StaticResource ToolboxRadioSelector1}" IsChecked="True"  />
                                                    <RadioButton x:Name="Egrid2" Margin="0,0,0,0" Background="Transparent" Checked="grid2_Checked" Unchecked="grid2_Unchecked" GroupName="GroupTool1" Style="{StaticResource ToolboxRadioSelector2}" />
                                                    <RadioButton x:Name="Egrid3" Margin="0,0,0,0" Checked="grid3_Checked" Unchecked="grid3_Unchecked" Background="Transparent"  GroupName="GroupTool1" Style="{StaticResource ToolboxRadioSelector3}" />
                                                    <RadioButton Margin="0,0,0,0" x:Name="Egrid4" Checked="grid4_Checked" Unchecked="grid4_Unchecked" Background="Transparent" GroupName="GroupTool1" Style="{StaticResource ToolboxRadioSelector4}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,15,20,0">
                                                    <ToggleButton x:Name="ETg_Btn8" Checked="ETg_Btn8_Checked" Unchecked="ETg_Btn8_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,10,0" Height="20" Width="27" BorderThickness="0" Style="{StaticResource tb_Overlaystyle}"   >
                                                        <ToggleButton.Background>
                                                            <ImageBrush ImageSource="Assets/Images/none/group-2.png"/>
                                                        </ToggleButton.Background>
                                                    </ToggleButton>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,15,20,0">
                                                    <ToggleButton x:Name="ETg_Btn9" Checked="ETg_Btn9_Checked" Unchecked="ETg_Btn9_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,10,0" Height="20"  Width="27" BorderThickness="0" Style="{StaticResource Crop_Style}"   >
                                                        <ToggleButton.Background>
                                                            <ImageBrush ImageSource="Assets/Images/none/group-26.png"/>
                                                        </ToggleButton.Background>
                                                    </ToggleButton>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,15,20,0">
                                                    <Button  Margin="0,0,10,0" x:Name="ERotateLeft" Click="ERotateLeft_Click" Background="Transparent" Style="{StaticResource ToolboxRadioSelector8}" />
                                                    <Button  Margin="0,0,10,0" x:Name="ERotateRight" Click="ERotateRight_Click" Background="Transparent" Style="{StaticResource ToolboxRadioSelector9}" />
                                                    
                                                </StackPanel>

                                            </StackPanel>

                                            <StackPanel Name="StackCropMenu" Orientation="Horizontal" FlowDirection="LeftToRight" HorizontalAlignment="Stretch" Margin="208,50,104,-69">
                                                <Label Name="LabelX" Visibility="Collapsed" Width="20" Height="22" FontFamily="Roboto" FontSize="10px" Content="X" Foreground="#7f8486"></Label>
                                                <TextBox Name="Text_X" Visibility="Collapsed" Background="Transparent" BorderThickness="0 0 0 1" BorderBrush="#7f8486"  Width="30" Height="20"></TextBox>
                                                <Label Name="LabelY" Visibility="Collapsed" Width="20" Height="20" FontSize="12" Content="Y" Foreground="#7f8486"></Label>
                                                <TextBox Name="Text_Y" Background="Transparent" BorderThickness="0 0 0 1" BorderBrush="#7f8486" Visibility="Collapsed" Width="30" Height="20"></TextBox>
                                                <Label Name="LabelW" Visibility="Collapsed" Width="50" Height="25" FontSize="12" Content="Width" Foreground="#7f8486"></Label>
                                                <TextBox Name="Text_Width" Background="Transparent" BorderThickness="0 0 0 1" BorderBrush="#7f8486" Visibility="Collapsed" Width="30" Height="20"></TextBox>
                                                <Label Name="LabelH" Visibility="Collapsed" Width="50" Height="25" FontSize="12" Content="Height" Foreground="#7f8486"></Label>
                                                <TextBox Name="Text_Height" Background="Transparent" BorderThickness="0 0 0 1" BorderBrush="#7f8486" Visibility="Collapsed" Width="30" Height="20"></TextBox>
                                                <RadioButton  x:Name="Eratio1"  Visibility="Collapsed" HorizontalAlignment="Center" Checked="ratio1_Checked" Unchecked="ratio1_Unchecked" Background="Transparent" GroupName="GroupTool2" Style="{StaticResource ToolboxRadioSelector5}" />
                                                <RadioButton x:Name="Eratio2"  Visibility="Collapsed" HorizontalAlignment="Center" Checked="ratio2_Checked" Unchecked="ratio2_Unchecked" Background="Transparent" GroupName="GroupTool2" Style="{StaticResource ToolboxRadioSelector6}"/>
                                                <RadioButton  x:Name="Eratio3" Visibility="Collapsed" HorizontalAlignment="Center" Checked="ratio3_Checked" Unchecked="ratio3_Unchecked" Background="Transparent" GroupName="GroupTool2" Style="{StaticResource ToolboxRadioSelector7}"/>
                                                <Button Name="ButtonOK" Visibility="Collapsed" Width="25" Height="25" Content="OK" Click="ButtonOK_Click" />
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </Grid>

                                <Grid  Grid.Row="1" Background="#131415" >
                                    <Grid x:Name="EditPicGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="3.5*"/>
                                            <RowDefinition Height="30*"/>
                                            <RowDefinition Height="2.5*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="4*"/>
                                            <ColumnDefinition Width="30*" />
                                            <ColumnDefinition Width="4*"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Row="1" Grid.Column="1" Background="#ffffff" >
                                            <Grid x:Name="EditFrame" >
                                                <Image Visibility="Collapsed" x:Name="EditFramePic"  Grid.Column="1" Source="{Binding Path= PathImg, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                                                <Image x:Name="EditFramePicEdit" Grid.Column="1" Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.DisplayEditImage}" Stretch="Fill" />
                                                <!--<Grid Grid.Column="1" RenderTransformOrigin="0.5,0.5" ClipToBounds="True" >
                                                    <Grid.LayoutTransform>
                                                        <RotateTransform  Angle="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.RotationAngle}" />
                                                    </Grid.LayoutTransform>
                                                    <zoomAndPan:ZoomAndPanControl  x:Name="zoomAndPanControl" MouseWheel="zoomAndPanControl_MouseWheel" ClipToBounds="True" Style="{StaticResource ZoomStyle}" 
                                                                                  SizeChanged="zoomAndPanControl_SizeChanged" MouseDoubleClick="zoomAndPanControl_MouseDoubleClick" MouseMove="zoomAndPanControl_MouseMove" >
                                                        <Image Name="EditFramePicEdit" Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.DisplayEditImage}" HorizontalAlignment="Center" Margin="0" Stretch="Uniform" 
                                                               Width="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.FileInfo.Width}" 
                                                               Height="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.FileItem.FileInfo.Height}">
                                                            <Image.InputBindings>
                                                                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=ImageDoubleClickCommand}" />
                                                            </Image.InputBindings>
                                                            <Image.Effect>
                                                                <DropShadowEffect ShadowDepth="10" Color="Black" BlurRadius="20" />
                                                            </Image.Effect>
                                                        </Image>
                                                    </zoomAndPan:ZoomAndPanControl>
                                                </Grid>-->
                                                <local1:WatermarkImage />
                                                <Line x:Name="EV_Line1" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2" />
                                                <Line x:Name="EH_Line1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EVG_Line1" Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EVG_Line2" Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EVG_Line3" Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EVG_Line4" Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EVG_Line5" Grid.Column="1" VerticalAlignment="Stretch" Grid.RowSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EHG_Line1" Grid.Row="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EHG_Line2" Grid.Row="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                                <Line x:Name="EHG_Line3" Grid.Row="1" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Stroke="Black" Fill="Black" StrokeThickness="2"/>
                                            </Grid>
                                        </Border>

                                        <Rectangle Name="Overlay1" Grid.Row="1" Grid.Column="1" Margin="0,2,0,7" Grid.RowSpan="2" Visibility="Collapsed" Fill="White" Panel.ZIndex="-1" Opacity="10"/>
                                        <Rectangle Name="OverLay2" Grid.Row="1" Grid.Column="1" Margin="0,2,0,7" Grid.RowSpan="2" Visibility="Collapsed" Fill="DarkRed" Panel.ZIndex="0" Opacity="40"/>
                                        <Rectangle Name="Overlay3" Grid.Row="1" Grid.Column="1" Margin="0,2,0,7" Grid.RowSpan="2" Visibility="Collapsed" Fill="Blue" Panel.ZIndex="-2" Opacity="10"/>
                                        <Rectangle Name="Overlay4" Grid.Row="1" Grid.Column="1" Margin="0,2,0,7" Grid.RowSpan="2" Visibility="Collapsed" Fill="Black" Panel.ZIndex="-4" Opacity="10"/>
                                        <Rectangle Name="CropOut" Grid.Row="1" Grid.Column="1" Margin="0,2,0,7" Grid.RowSpan="2" Visibility="Collapsed" StrokeDashArray="2,2" Stroke="White" StrokeThickness="2" Fill="Transparent"/>
                                    </Grid>
                                </Grid>

                                <Grid Grid.Row="2" Background="#131415" >
                                    <local1:EditBottomControl />
                                    <Button Visibility="Collapsed"  x:Name="ExportButton" Content="" Background="Transparent" Width="85" Height="50" BorderThickness="0" HorizontalAlignment="Center" Margin="30" Click="ExportButton_Click"  />
                                </Grid>
                            </Grid>

                            <Border Grid.Column="2" Background="#2e2f30"  BorderThickness="1" BorderBrush="#535657">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ScrollViewer.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ScrollViewer.RenderTransform>
                                    <StackPanel>
                                        <local1:LevelGraph x:Name="EditLevelGraph" Background="#2e2f30"  />
                                        <Separator Height="1" Background="Black"/>
                                        <local1:Navigation/>
                                        <Separator Height="1" Background="Black"/>
                                        <local1:PhotoEdit/>
                                        <Separator Height="1" Background="Black"/>
                                        <local1:WatermarkSettings/>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </TabItem>

                    <!--<TabItem Name="LvVedio" FontFamily="roboto" Header="Vedio" Width="150px">
                        <Grid>
                            <Grid.RowDefinitions >
                                <RowDefinition Height="*" ></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" ></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0.2,0.4">
                                <layouts:LayoutGridBottom />
                                -->
                    <!--<local1:LVControler x:Name="myLVControler_2" Background="WhiteSmoke" ></local1:LVControler>-->
                    <!--
                            </DockPanel>
                        </Grid>
                    </TabItem>-->
                </TabControl>
            </Grid>
        </Grid>
    </Grid>
</Controls:MetroWindow>